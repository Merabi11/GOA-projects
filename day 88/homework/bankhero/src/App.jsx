import UserStatus from './UserStatus';

function App() {
  const age = 18;
  const textLength = 'merabi';
  const boolean = false;

  return (
    <>
      <h2>ტერნარი</h2>
      <section>
        <p>{age >= 18 ? 'შენ ხარ სრულწლოვანი' : 'შენ ხარ არასწრულწლოვანი'}</p>

        <p>
          {textLength.length > 8
            ? 'ტექსტი საკმარისი სიგრძისაა'
            : 'ტექსტი მოკლეა'}
        </p>

        <p>{boolean === true ? 'ჭეშმარიტია' : 'არარის ჭეშმარიტი'}</p>
      </section>

      <h2>ქონდიშენალ &&</h2>

      <section>
        <p>{age >= 18 && '18 წლის ხარ'}</p>

        <p>{textLength.length <= 6 && 'ტექსტის სიგრძე ემთხვევა'}</p>

        <p>{boolean === false && 'არარის ჭეშმარიტი პირობა'}</p>
      </section>

      <UserStatus />
    </>
  );
}

// ჩვენ არ შეგვიძლია JSX-შიგნით თეგებში გამოვიყენოთ if else-ები რადგან ის არის შეუძლებელი არიმუშავებს ვერგამოვიყენებთ
// ჩვენ შეგვიძლია გამოვიყენოთ თეგებს შორის მაგ: { 5 + 5 }, { true ? "true" : "false" }, { true && "this is true" }. ესეტი ოპერაციები შეგვიზლია გავაკეთოთ
// რა განსხვავებაა ტერნარი ოპერატორსა და ქონდიშენალ && შორის
// მაგ ეს არის if else შემოკლებული სინტაქსით ორ პირობიანი if else: { true ? "true" : "false" }
// ესეც იგივე არის ქონდიშენალ && - if else შემოკლებული სინტაქსი უბრალოდ ამას გააჩნია მხოლოდ ერთი პორბა თი პორბა არის true რაღაც შესრულდება თუ არადა არაფერს არიზამს მხოლოდ ერთი პასუხიაქ "კი" სხვა შემთხვევაში არანაირი პასუხი არააქ

export default App;
