import { createRoot } from 'react-dom/client';
import App from './App.jsx';

const divContainer = document.getElementById('root');
const div = createRoot(divContainer);

div.render(<App />);

// CommonJs მაგალითები (require / module) - ეს არის ძველი გზა Node.js- მოდულის სისტემა
// module.exports - ფაილიდან გატანა
// require() - ფაილიდან შემოტანა

// ES Modules (import / export)
// export - ფაილიდან გატანა
// import - ფაილიდან შემოტანას

// React არის JavaScript-ის ბიბლიოთეკა რომელის გამოუყენება user-interface-ის შესაქმნელად
// რეაქთის მთავარი მიზანია რომ ვებსაიტები და აპლიკაციები იყოს უფრო სწრაფი მოქნილი და მარტივად სამართავი
// რეათში კოდები არის დაყოფილი კომპონენტებად საიტი იქნება ტუ აპლიკაცია ყველაფერი არის კომპონენტებად იგივე რაც პატარა კოდის ნაწილაკებად არის აწყობილი როგორც ლეგოს კუბიკები ისე

// JSX (JavaScript XML)
// JSX-არის JavaScript-ის გაფართოება JavaScript-ში ვწერთ კოდს HTML-ის მსგავსად
// ერთი შეხედვით გვეგონება HTML მაგრამ არარის ეგრე JSX-ის საშვალებით ხდება ეს ყველაფერი ჯავასკრიპტში კოდის წერა ეიჩტი ემელის მსგავსად უფრო მარტივია და უფრო მოხერხებული

// React DOM-არის პაკეტი რომლის საშვალებითაც ვაკავშირებთ ბრაუზერს რეაქთთან რომ წვდომა გვქონდეს
// მისი საშვალებით ჩვენ ვაწვდით React-კომპონენტებს HTML-ეს ამის საშვალებით ვანთავსებთ და გამოგვაქვს შედეგად
// CreateRoot
// Render

// Functional Components
// React-ში კომპონენტები შეილება იყოს ფუნქციური ანუ ფუნქციების სახით იყოს გამოტანილი რომელიც არის JSX-სახით

// მაგ: function headingText() {
//   <h1>Hello world</h1>;
// }
